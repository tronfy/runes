#[derive(Clone, Copy, Debug)]
pub enum AddressingMode {
    IMP,
    IMM,
    ZP0,
    ZPX,
    ZPY,
    ABS,
    ABX,
    ABY,
    IND,
    IZX,
    IZY,
    REL,
}

#[derive(Clone, Copy, Debug)]
pub enum OpCode {
    ADC,
    AND,
    ASL,
    BCC,
    BCS,
    BEQ,
    BIT,
    BMI,
    BNE,
    BPL,
    BRK,
    BVC,
    BVS,
    CLC,
    CLD,
    CLI,
    CLV,
    CMP,
    CPX,
    CPY,
    DEC,
    DEX,
    DEY,
    EOR,
    INC,
    INX,
    INY,
    JMP,
    JSR,
    LDA,
    LDX,
    LDY,
    LSR,
    NOP,
    ORA,
    PHA,
    PHP,
    PLA,
    PLP,
    ROL,
    ROR,
    RTI,
    RTS,
    SBC,
    SEC,
    SED,
    SEI,
    STA,
    STX,
    STY,
    TAX,
    TAY,
    TSX,
    TXA,
    TXS,
    TYA,

    // illegal opcodes
    XXX,
}

#[derive(Clone, Copy)]
pub struct Instruction {
    pub opcode: OpCode,
    pub addressing_mode: AddressingMode,
    pub cycles: u8,
}

impl Instruction {
    fn new(opcode: OpCode, addressing_mode: AddressingMode, cycles: u8) -> Instruction {
        Instruction {
            opcode,
            addressing_mode,
            cycles,
        }
    }
}

type OP = OpCode;
type AM = AddressingMode;
type I = Instruction;

// returns a lookup table for 6502 instructions
// based on http://archive.6502.org/datasheets/rockwell_r650x_r651x.pdf (page 10)
pub fn create_lookup_table() -> Vec<Instruction> {
    vec![
        I::new(OP::BRK, AM::IMM, 7),
        I::new(OP::ORA, AM::IZX, 6),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::NOP, AM::IMP, 3),
        I::new(OP::ORA, AM::ZP0, 3),
        I::new(OP::ASL, AM::ZP0, 5),
        I::new(OP::XXX, AM::IMP, 5),
        I::new(OP::PHP, AM::IMP, 3),
        I::new(OP::ORA, AM::IMM, 2),
        I::new(OP::ASL, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::ORA, AM::ABS, 4),
        I::new(OP::ASL, AM::ABS, 6),
        I::new(OP::XXX, AM::IMP, 6),
        //
        I::new(OP::BPL, AM::REL, 2),
        I::new(OP::ORA, AM::IZY, 5),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::ORA, AM::ZPX, 4),
        I::new(OP::ASL, AM::ZPX, 6),
        I::new(OP::XXX, AM::IMP, 6),
        I::new(OP::CLC, AM::IMP, 2),
        I::new(OP::ORA, AM::ABY, 4),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 7),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::ORA, AM::ABX, 4),
        I::new(OP::ASL, AM::ABX, 7),
        I::new(OP::XXX, AM::IMP, 7),
        //
        I::new(OP::JSR, AM::ABS, 6),
        I::new(OP::AND, AM::IZX, 6),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::BIT, AM::ZP0, 3),
        I::new(OP::AND, AM::ZP0, 3),
        I::new(OP::ROL, AM::ZP0, 5),
        I::new(OP::XXX, AM::IMP, 5),
        I::new(OP::PLP, AM::IMP, 4),
        I::new(OP::AND, AM::IMM, 2),
        I::new(OP::ROL, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::BIT, AM::ABS, 4),
        I::new(OP::AND, AM::ABS, 4),
        I::new(OP::ROL, AM::ABS, 6),
        I::new(OP::XXX, AM::IMP, 6),
        //
        I::new(OP::BMI, AM::REL, 2),
        I::new(OP::AND, AM::IZY, 5),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::AND, AM::ZPX, 4),
        I::new(OP::ROL, AM::ZPX, 6),
        I::new(OP::XXX, AM::IMP, 6),
        I::new(OP::SEC, AM::IMP, 2),
        I::new(OP::AND, AM::ABY, 4),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 7),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::AND, AM::ABX, 4),
        I::new(OP::ROL, AM::ABX, 7),
        I::new(OP::XXX, AM::IMP, 7),
        //
        I::new(OP::RTI, AM::IMP, 6),
        I::new(OP::EOR, AM::IZX, 6),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::NOP, AM::IMP, 3),
        I::new(OP::EOR, AM::ZP0, 3),
        I::new(OP::LSR, AM::ZP0, 5),
        I::new(OP::XXX, AM::IMP, 5),
        I::new(OP::PHA, AM::IMP, 3),
        I::new(OP::EOR, AM::IMM, 2),
        I::new(OP::LSR, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::JMP, AM::ABS, 3),
        I::new(OP::EOR, AM::ABS, 4),
        I::new(OP::LSR, AM::ABS, 6),
        I::new(OP::XXX, AM::IMP, 6),
        //
        I::new(OP::BVC, AM::REL, 2),
        I::new(OP::EOR, AM::IZY, 5),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::EOR, AM::ZPX, 4),
        I::new(OP::LSR, AM::ZPX, 6),
        I::new(OP::XXX, AM::IMP, 6),
        I::new(OP::CLI, AM::IMP, 2),
        I::new(OP::EOR, AM::ABY, 4),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 7),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::EOR, AM::ABX, 4),
        I::new(OP::LSR, AM::ABX, 7),
        I::new(OP::XXX, AM::IMP, 7),
        //
        I::new(OP::RTS, AM::IMP, 6),
        I::new(OP::ADC, AM::IZX, 6),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::NOP, AM::IMP, 3),
        I::new(OP::ADC, AM::ZP0, 3),
        I::new(OP::ROR, AM::ZP0, 5),
        I::new(OP::XXX, AM::IMP, 5),
        I::new(OP::PLA, AM::IMP, 4),
        I::new(OP::ADC, AM::IMM, 2),
        I::new(OP::ROR, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::JMP, AM::IND, 5),
        I::new(OP::ADC, AM::ABS, 4),
        I::new(OP::ROR, AM::ABS, 6),
        I::new(OP::XXX, AM::IMP, 6),
        //
        I::new(OP::BVS, AM::REL, 2),
        I::new(OP::ADC, AM::IZY, 5),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::ADC, AM::ZPX, 4),
        I::new(OP::ROR, AM::ZPX, 6),
        I::new(OP::XXX, AM::IMP, 6),
        I::new(OP::SEI, AM::IMP, 2),
        I::new(OP::ADC, AM::ABY, 4),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 7),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::ADC, AM::ABX, 4),
        I::new(OP::ROR, AM::ABX, 7),
        I::new(OP::XXX, AM::IMP, 7),
        //
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::STA, AM::IZX, 6),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 6),
        I::new(OP::STY, AM::ZP0, 3),
        I::new(OP::STA, AM::ZP0, 3),
        I::new(OP::STX, AM::ZP0, 3),
        I::new(OP::XXX, AM::IMP, 3),
        I::new(OP::DEY, AM::IMP, 2),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::TXA, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::STY, AM::ABS, 4),
        I::new(OP::STA, AM::ABS, 4),
        I::new(OP::STX, AM::ABS, 4),
        I::new(OP::XXX, AM::IMP, 4),
        //
        I::new(OP::BCC, AM::REL, 2),
        I::new(OP::STA, AM::IZY, 6),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 6),
        I::new(OP::STY, AM::ZPX, 4),
        I::new(OP::STA, AM::ZPX, 4),
        I::new(OP::STX, AM::ZPY, 4),
        I::new(OP::XXX, AM::IMP, 4),
        I::new(OP::TYA, AM::IMP, 2),
        I::new(OP::STA, AM::ABY, 5),
        I::new(OP::TXS, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 5),
        I::new(OP::NOP, AM::IMP, 5),
        I::new(OP::STA, AM::ABX, 5),
        I::new(OP::XXX, AM::IMP, 5),
        I::new(OP::XXX, AM::IMP, 5),
        //
        I::new(OP::LDY, AM::IMM, 2),
        I::new(OP::LDA, AM::IZX, 6),
        I::new(OP::LDX, AM::IMM, 2),
        I::new(OP::XXX, AM::IMP, 6),
        I::new(OP::LDY, AM::ZP0, 3),
        I::new(OP::LDA, AM::ZP0, 3),
        I::new(OP::LDX, AM::ZP0, 3),
        I::new(OP::XXX, AM::IMP, 3),
        I::new(OP::TAY, AM::IMP, 2),
        I::new(OP::LDA, AM::IMM, 2),
        I::new(OP::TAX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::LDY, AM::ABS, 4),
        I::new(OP::LDA, AM::ABS, 4),
        I::new(OP::LDX, AM::ABS, 4),
        I::new(OP::XXX, AM::IMP, 4),
        //
        I::new(OP::BCS, AM::REL, 2),
        I::new(OP::LDA, AM::IZY, 5),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 5),
        I::new(OP::LDY, AM::ZPX, 4),
        I::new(OP::LDA, AM::ZPX, 4),
        I::new(OP::LDX, AM::ZPY, 4),
        I::new(OP::XXX, AM::IMP, 4),
        I::new(OP::CLV, AM::IMP, 2),
        I::new(OP::LDA, AM::ABY, 4),
        I::new(OP::TSX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 4),
        I::new(OP::LDY, AM::ABX, 4),
        I::new(OP::LDA, AM::ABX, 4),
        I::new(OP::LDX, AM::ABY, 4),
        I::new(OP::XXX, AM::IMP, 4),
        //
        I::new(OP::CPY, AM::IMM, 2),
        I::new(OP::CMP, AM::IZX, 6),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::CPY, AM::ZP0, 3),
        I::new(OP::CMP, AM::ZP0, 3),
        I::new(OP::DEC, AM::ZP0, 5),
        I::new(OP::XXX, AM::IMP, 5),
        I::new(OP::INY, AM::IMP, 2),
        I::new(OP::CMP, AM::IMM, 2),
        I::new(OP::DEX, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 2),
        I::new(OP::CPY, AM::ABS, 4),
        I::new(OP::CMP, AM::ABS, 4),
        I::new(OP::DEC, AM::ABS, 6),
        I::new(OP::XXX, AM::IMP, 6),
        //
        I::new(OP::BNE, AM::REL, 2),
        I::new(OP::CMP, AM::IZY, 5),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::CMP, AM::ZPX, 4),
        I::new(OP::DEC, AM::ZPX, 6),
        I::new(OP::XXX, AM::IMP, 6),
        I::new(OP::CLD, AM::IMP, 2),
        I::new(OP::CMP, AM::ABY, 4),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 7),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::CMP, AM::ABX, 4),
        I::new(OP::DEC, AM::ABX, 7),
        I::new(OP::XXX, AM::IMP, 7),
        //
        I::new(OP::CPX, AM::IMM, 2),
        I::new(OP::SBC, AM::IZX, 6),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::CPX, AM::ZP0, 3),
        I::new(OP::SBC, AM::ZP0, 3),
        I::new(OP::INC, AM::ZP0, 5),
        I::new(OP::XXX, AM::IMP, 5),
        I::new(OP::INX, AM::IMP, 2),
        I::new(OP::SBC, AM::IMM, 2),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::SBC, AM::IMP, 2),
        I::new(OP::CPX, AM::ABS, 4),
        I::new(OP::SBC, AM::ABS, 4),
        I::new(OP::INC, AM::ABS, 6),
        I::new(OP::XXX, AM::IMP, 6),
        //
        I::new(OP::BEQ, AM::REL, 2),
        I::new(OP::SBC, AM::IZY, 5),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 8),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::SBC, AM::ZPX, 4),
        I::new(OP::INC, AM::ZPX, 6),
        I::new(OP::XXX, AM::IMP, 6),
        I::new(OP::SED, AM::IMP, 2),
        I::new(OP::SBC, AM::ABY, 4),
        I::new(OP::NOP, AM::IMP, 2),
        I::new(OP::XXX, AM::IMP, 7),
        I::new(OP::NOP, AM::IMP, 4),
        I::new(OP::SBC, AM::ABX, 4),
        I::new(OP::INC, AM::ABX, 7),
        I::new(OP::XXX, AM::IMP, 7),
    ]
}
